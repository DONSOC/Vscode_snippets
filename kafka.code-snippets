//{
//	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
//	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
//	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
//	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
//	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
//	// Placeholders with the same ids are connected.
//	// Example:
//	// "Print to console": {
//	// 	"scope": "javascript,typescript",
//	// 	"prefix": "log",
//	// 	"body": [
//	// 		"console.log('$1');",
//	// 		"$2"
//	// 	],
//	// 	"description": "Log output to console"
//	// }
//}

{
	"destkafka": {
		"prefix": "destination",
		"body":[ "destination kafka-c(\n$0",
		")"],
	},

	"bootstr-ser": {
		"prefix": "bootsrtap",
		"body":"bootstrap-servers/kafka-bootstrap-servers(<\"${string}\">)",
	},

	"clientlibdir": {
		"prefix": "client",
		"body":"client-lib-dir(<\"${string}\">)",
	},

	"config-option": {
		"prefix": "config",
		"body":" config/option($1)",
	},

	"confopt2_with_arrow": {
		"prefix": "config",
		"body":"config/option(<\"${string}\"> <\"${arrow}\"> <${string_or_number}>)",
	},

	"confopt2_without_arrow": {
		"prefix": "config",
		"body":"config/option(<\"${string}\"> <{$string_or_number}>)",
	},

	 "flushtimeonreload":{
		"prefix": "flush",
		"body":"flush-timeout-on-reload(<${number}>)"
	 },

	 "flushtimeonshutdown":{
		"prefix": "flush",
		"body":"flush-timeout-on-shutdown(<${number}>)"
	 },

	 "fracdigits":{
		"prefix": "frac",
		"body":"frac-digits(<${number}>)"
	 },

	 "key":{
		"prefix": "key",
		"body":"key(<\"${string}\">)"
	 },

	"local-time-zone":{
		"prefix": "local",
		"body":"local-time-zone/time-zone(<\"${string}\">)"
	 },

	"log-fifo":{
		"prefix": "log",
		"body":"log-fifo-size(<${number}>)"
	 },

	"message/-without_id":{
		"prefix": "message",
		"body":"message/template(<\"${string}\">)"
	 },

	"on-error":{
		"prefix": "on",
		"body":"on-error(<\"${string}\">)"
	 },

	
	"persist-name":{
		"prefix": "persist",
		"body":"persist-name(<\"${string}\">)"
	 },

	"properties-file":{
		"prefix": "properties",
		"body":"prperties-file(<\"${path}\">)"
	 },

	"send-time-zone":{
		"prefix": "send",
		"body":"send-time-zone(<\"${string}\">)"
	 },

	"sync-send":{
		"prefix": "sync-send",
		"body":"sync-send(<\"${yesno}\">)"
	 },

	"throttle":{
		"prefix": "throttle",
		"body":"throttle(<${number}>)"
	 },

	"time-zone":{
		"prefix": "throttle",
		"body":"throttle(<\"${string}\">)"
	},

	"topic":{
		"prefix": "topic",
		"body":"topic(<\"${string}\">)"
	 },

	 "ts-format":{
		"prefix": "ts-format",
		"body":"ts-format(<\"${string}\">)"
	 },

	 "workers":{
		"prefix": "workers",
		"body":"workers(<${number}>)"
	 },

	 "config-option-string-string/num":{
		"prefix": "config",
		"body":"config/option(\n<\"${string}\">(<{$string_or_number}>)\n)"
	 },

	 "key-id-string":{
		"prefix": "key",
		"body":"key(\n<${identifier}>(<\"${string}\">)\n)"
	 },

	 "message/template-with_id":{
		"prefix": "message",
		"body":"message/template(\n<${identifier}>(<\"${string}\">)\n)"
	 },
}